<%- include ('./partials/adminHeader'); -%>


<div class="container mt-2">
  <nav aria-label="breadcrumb mt-5">
    <ol class="breadcrumb">
      <li class="breadcrumb-item active" aria-current="page">Admin</li>
      <li class="breadcrumb-item"><a href="/history">History</a></li>
    </ol>
  </nav>
</div>
<div class="container mt-4">
  <div class="row mt-4 mb-3">
    <div class="mb-3 w-25">
      <label for="selectUser" class="">Select User</label>
      <select
        id="selectUser"
        class="form-select"
        aria-label="Default select example"
      >
        <option selected>All</option>
      </select>
    </div>
    <div class="mb-3 w-25">
      <label for="startDate" class="">Start Date</label>
      <input type="date" class="form-control" id="startDate" name="startDate" />
    </div>
    <div class="mb-3 w-25">
      <label for="endDate" class="">End Date</label>
      <input type="date" class="form-control" id="endDate" name="endDate" />
    </div>
    <button type="button" id="search" class="btn btn-info text-white w-25 h-25 mt-4">
      Search
    </button>
  </div>

<div class="tableContainer mb-3">
  <table class="table table-hover table-responsive">
    <thead>
      <tr>
        <th scope="col">No.</th>
        <th scope="col">User ID</th>
        <th scope="col">Email</th>
        <th scope="col">CheckIn Date / Time</th>
        <th scope="col">CheckOut Date / Time</th>
        <th scope="col">Total Time(hh-mm-ss)</th>
      </tr>
    </thead>
    <tbody id="tableBody"></tbody>
  </table>
</div>

  <!-- <table id="myTable">
    <thead>
      <tr>
        <th scope="col">No.</th>
        <th scope="col">User ID</th>
        <th scope="col">Email</th>
        <th scope="col">CheckIn Date / Time</th>
        <th scope="col">CheckOut Date / Time</th>
        <th scope="col">Total Time(hh-mm-ss)</th>
      </tr>
    </thead>
    <tbody id="tableBody"></tbody>
  </table> -->

  <div class="mt-3 mb-5">
    <button id="csvBtn" class="btn btn-secondary" onclick="prepareForCSV()">Export CSV</button>
    <a href="#" class="btn btn-secondary">Export Excel</a>
  </div>
</div>

<script>
  var csvDownload = [];
  var dataToDownload;

  $(document).ready(function () {
    //Built in Table
    // $("#myTable").DataTable({ searching: false, paging: false, scrollY: 500, info: false, ordering: true});

    var selectedUser = 'All';
    var fromDate = '';
    var toDate   = '';
    getRequestforAllUsers(selectedUser, fromDate, toDate);
    
    //Search button Event
    $("#search").on("click", function (e) {
      
      selectedUser = $("#selectUser").val();
      fromDate = $("#startDate").val();
      toDate = $("#endDate").val();
     
      getRequestforAllUsers(selectedUser, fromDate, toDate);
        
    });

    getRequestforUniqueEmployee();
  });



   //Get All Unique Employee
   function getRequestforUniqueEmployee()
  { 
    $.ajax({
    url: "/uniqueEmployeeForLeave",
    type: "GET",
    success: function (data) {

      //distinct(Unique or Prevent to repeate username) 
      // var flags = [], output = [], l = data.length, i;
      for( i=0; i<data.length; i++) {
          // if( flags[data[i].username]) continue;
          // flags[data[i].username] = true;
          var option = `<option>${data[i]}</option>`;
          $("#selectUser").append(option);
        }
    },
   });
  }



  //Get All Users History
  function getRequestforAllUsers(selectedUser, fromDate, toDate)
  { 
    $.ajax({
    url: "/allHistory?selectedUser="+selectedUser+"&fromDate="+fromDate+"&toDate="+toDate,
    type: "GET",
    success: function (data) {
      // console.log(data);
      
      var count = 1;
      var _html = "";
      data.forEach(function (item) {
        let setLoginDate = new Date(item.loginDate).toUTCString();
        let setLogoutDate = new Date(item.logoutDate).toUTCString();
        let loginD = setLoginDate.slice(0, 17);
        let logoutD = setLogoutDate.slice(0, 17);
        if(loginD == "Invalid Date")
        {
          _html += `
                <tr>
                  <td>${count}</td>
                  <td>${item.username}</td>
                  <td>${item.email}</td>
                  <td> NA / ${item.loginTime}</td>
                  <td>${logoutD} / ${item.logoutTime}</td>
                  <td>${item.totalTime}</td>
                </tr>
              `;
          count++;
        }
        else if(logoutD == "Invalid Date")
        {
          _html += `
                  <tr>
                    <td>${count}</td>
                    <td>${item.username}</td>
                    <td>${item.email}</td>
                    <td>${loginD} / ${item.loginTime}</td>
                    <td> NA / ${item.logoutTime}</td>
                    <td>${item.totalTime}</td>
                  </tr>
                `;
          count++;
        }
        else
        {
          _html += `
                  <tr>
                    <td>${count}</td>
                    <td>${item.username}</td>
                    <td>${item.email}</td>
                    <td>${loginD} / ${item.loginTime}</td>
                    <td>${logoutD} / ${item.logoutTime}</td>
                    <td>${item.totalTime}</td>
                  </tr>
                `;
          count++;
        }
      });

      if(_html == "")
      {
          _html = `<tr>
                      <td>-</td>
                      <td>-</td>
                      <td>No Data to Show</td>
                      <td>-</td>
                      <td>-</td>
                  </tr>`;
      }
      
      $("#tableBody").html(_html);


      dataToDownload = data;
    },
  });
}
    
//Data Modified For CSV
function prepareForCSV() {

      var data = dataToDownload;
      
        //Remove unnecessary data
        let modifiedArray = [];
        let count = 0;
        
        data.forEach((element) => {
          delete element._id;
          delete element.__v;
          modifiedArray[count] = element;
          count++;
        });

        //Converting into Array of Arrays
        let objForDownload = [];
        const propertyValues = Object.keys(modifiedArray[0]);
        objForDownload.push(propertyValues);
        for (let i = 0; i < modifiedArray.length; i++) {
          const propertyValues = Object.values(modifiedArray[i]);
          objForDownload.push(propertyValues);
        }
        
        //Calling Function for CSV
        exportToCsv("UserHistory.csv", objForDownload);
        dataToDownload = undefined;
}


//Exporting To CSV Function
  function exportToCsv(filename, rows) {
    var processRow = function (row) {
      var finalVal = "";
      for (var j = 0; j < row.length; j++) {
        var innerValue = row[j] === null ? "" : row[j].toString();
        if (row[j] instanceof Date) {
          innerValue = row[j].toLocaleString();
        }
        var result = innerValue.replace(/"/g, '""');
        if (result.search(/("|,|\n)/g) >= 0) result = '"' + result + '"';
        if (j > 0) finalVal += ",";
        finalVal += result;
      }
      return finalVal + "\n";
    };

    var csvFile = "";
    for (var i = 0; i < rows.length; i++) {
      csvFile += processRow(rows[i]);
    }

    var blob = new Blob([csvFile], { type: "text/csv;charset=utf-8;" });
    if (navigator.msSaveBlob) {
      // IE 10+
      navigator.msSaveBlob(blob, filename);
    } else {
      var link = document.createElement("a");
      if (link.download !== undefined) {
        // feature detection
        // Browsers that support HTML5 download attribute
        var url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", filename);
        link.style.visibility = "hidden";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
    }
  }
</script>


<%- include ('./partials/adminFooter'); -%>
